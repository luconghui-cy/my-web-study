<view class="container">
  <view class="v-section">
    <view class="v-title">
      <text>示例</text>
    </view>
    <view class="v-content">
      <!--  example start -->
      <view>
        <text class="v-subtitle">Vue简介</text>
        <text>Vue.js 是目前最火的一个前端框架，React是最流行的一个前端框架（React除了开发网站，还可以开发手机App， Vue语法也是可以用于进行手机App开发的，需要借助于Weex）</text>
        <text>Vue.js 是前端的**主流框架之一**，和Angular.js、React.js 一起，并成为前端三大主流框架！</text>
        <text>Vue.js 是一套构建用户界面的框架，**只关注视图层**，它不仅易于上手，还便于与第三方库或既有项目整合。（Vue有配套的第三方类库，可以整合起来做大型项目的开发）</text>
        <text>提高开发效率的发展历程：原生JS -> Jquery之类的类库 -> 前端模板引擎 -> Angular.js / Vue.js（能够帮助我们减少不必要的DOM操作；提高渲染效率；双向数据绑定的概念【通过框架提供的指令，我们前端程序员只需要关心数据的业务逻辑，不再关心DOM是如何渲染的了】）</text>
        <text>在Vue中，一个核心的概念，就是让用户不再操作DOM元素，解放了用户的双手，让程序员可以更多的时间去关注业务逻辑</text>
      </view>

      <!--  框架和库的区别 -->
      <view>
        <text class="v-subtitle">框架和库的区别</text>
        <text>框架：是一套完整的解决方案；对项目的侵入性较大，项目如果需要更换框架，则需要重新架构整个项目。
              - node 中的 express；</text>
        <text>库（插件）：提供某一个小功能，对项目的侵入性较小，如果某个库无法完成某些需求，可以很容易切换到其它库实现需求。
              - 1. 从Jquery 切换到 Zepto
              - 2. 从 EJS 切换到 art-template</text>
      </view>



      <!--  example start -->
      <view>
        <text class="v-subtitle">title</text>
        <text>content...</text>
      </view>
      <!--  example end -->
    </view>
  </view>
</view>